{"ast":null,"code":"var _jsxFileName = \"/Users/saigopikar/granite/app/javascript/src/components/Dashboard/index.jsx\",\n    _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar logger = require(\"js-logger\").get(\"granite:javascript:src:components:Dashboard:index\");\n\nimport React, { useState, useEffect } from \"react\";\nimport { isNil, isEmpty, either } from \"ramda\";\nimport Container from \"components/Container\";\nimport Table from \"components/Tasks/Table\";\nimport tasksApi from \"apis/tasks\";\nimport PageLoader from \"components/PageLoader\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var history = _ref.history;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var fetchTasks = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return tasksApi.list();\n\n            case 3:\n              response = _context.sent;\n              setTasks(response.data.tasks);\n              setLoading(false);\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              logger.error(_context.t0);\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function fetchTasks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var showTask = function showTask(slug) {\n    history.push(\"/tasks/\".concat(slug, \"/show\"));\n  };\n\n  useEffect(function () {\n    fetchTasks();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-screen h-screen\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageLoader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (either(isNil, isEmpty)(tasks)) {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-xl leading-5 text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"You have no tasks assigned \\uD83D\\uDE14\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    data: tasks,\n    showTask: showTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/saigopikar/granite/app/javascript/src/components/Dashboard/index.jsx"],"names":["React","useState","useEffect","isNil","isEmpty","either","Container","Table","tasksApi","PageLoader","Dashboard","history","tasks","setTasks","loading","setLoading","fetchTasks","list","response","data","logger","error","showTask","slug","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,QAAuC,OAAvC;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACjC,kBAA0BV,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BZ,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEQR,QAAQ,CAACS,IAAT,EAFR;;AAAA;AAETC,cAAAA,QAFS;AAGfL,cAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAT,CAAcP,KAAf,CAAR;AACAG,cAAAA,UAAU,CAAC,KAAD,CAAV;AAJe;AAAA;;AAAA;AAAA;AAAA;AAMfK,cAAAA,MAAM,CAACC,KAAP;AACAN,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVC,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAWA,MAAMM,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACvBZ,IAAAA,OAAO,CAACa,IAAR,kBAAuBD,IAAvB;AACD,GAFD;;AAIArB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIF,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,MAAIT,MAAM,CAACF,KAAD,EAAQC,OAAR,CAAN,CAAuBQ,KAAvB,CAAJ,EAAmC;AACjC,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,CADF;AAOD;;AAED,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAb;AAAoB,IAAA,QAAQ,EAAEU,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA9CD;;AAgDA,eAAeZ,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { isNil, isEmpty, either } from \"ramda\";\n\nimport Container from \"components/Container\";\nimport Table from \"components/Tasks/Table\";\nimport tasksApi from \"apis/tasks\";\nimport PageLoader from \"components/PageLoader\";\n\nconst Dashboard = ({ history }) => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await tasksApi.list();\n      setTasks(response.data.tasks);\n      setLoading(false);\n    } catch (error) {\n      logger.error(error);\n      setLoading(false);\n    }\n  };\n\n  const showTask = slug => {\n    history.push(`/tasks/${slug}/show`);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"w-screen h-screen\">\n        <PageLoader />\n      </div>\n    );\n  }\n\n  if (either(isNil, isEmpty)(tasks)) {\n    return (\n      <Container>\n        <h1 className=\"text-xl leading-5 text-center\">\n          You have no tasks assigned ðŸ˜”\n        </h1>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Table data={tasks} showTask={showTask} />\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}